

// SPDX-License-Identifier: GPL-3.0

// Define Solidity Version or Version + higher
pragma solidity ^0.8.7;

// Contract Declaration
contract travCoin
{

    // State variable to store addresses (public half of key-pair)
    address public minter;

    // maps address to uint 
    mapping (address => uint) public balances;

    // event listener
    event Sent (address from, address to, uint amount);

    // 
    constructor () {
        minter = msg.sender;
    }

    // add funds to receiver
    function mint(address receiver, uint amount) public
    {
        // ensures that the creator can only call this mint function
        require(msg.sender == minter);
        balances[receiver] += amount;

    }

    // error checking for insufficient funds
    error InsufficientFunds(uint requested, uint available);


    // function to check funds and send if sufficient
    function send(address receiver, uint amount) public
    {
        if(amount > balances[msg.sender])
        {
            revert InsufficientFunds(
                {
                    requested: amount,
                    available: balances[msg.sender]
                });
        }

        balances[msg.sender] -= amount;
        balances[receiver] += amount;
        emit Sent (msg.sender, receiver, amount);
    }


        

}
